DCL Tiles

   : list_box
     __________________________________________________________________

   Display a vertical list of text, with optional scrollbar and
   title.     DCL Active Tile
     __________________________________________________________________

   This active tile features a list box. When an item is selected by the user, it becomes highlighted. A scrollbar will automatically appear if the number of items exceeds the display capacity of the list_box tile.

   Creating and Modifying a List Box with LISP Functions

   To create and modify the list shown in the list_box tile, utilize the following [link]LISP functions:
     * ([link]start_list "key" int1 int2)

   The start_list function requires three parameters. The key parameter denotes the name of the list_box tile. The int1 parameter indicates the action to be performed:

   int1 Meaning
   1    Modify a single item in the list.
   2    Append an item to the end of the list.
   3    Generate a new list; this is the default option.

    The int2 parameter specifies the item number to be modified (with the first item in the list being #0); int2 is applicable only when int1 is set to 1.
    For EXAMPLE:
       (start_list "L1" 1 3)     ; changes the fourth item in the list.

     * ([link]add_list "string")

     To implement the change, employ the add_list function. The string parameter indicates the text to be added or substituted in the list:
       (start_list "L1" 1 3)     ; modifies the fourth item in the list.
       (add_list "New item")

     When start_list is in modification mode (int1 = 1), each invocation of add_list alters the same item. Conversely, when start_list is in addition mode (int1 = 2), each invocation of add_list appends a new item to the end of the list.

     * ([link]end_list)

     To conclude the list processing, invoke the end_list function as follows:
       (start_list "L1" 1 3)     ; modifies the fourth item in the list.
       (add_list "New item")
       (end_list)

NOTE
   There are no LISP functions available for inserting an item in the middle of the list or for removing an item from the list.

Valid Attributes
   : list_box {
       [link]action = "(string)";
       [link]allow_accept = flag;
       [link]alignment = position;
       [link]fixed_height = flag;
       [link]fixed_width = flag;
       [link]height = number;
       [link]is_enabled = flag;
       [link]is_tab_stop = flag;
       [link]key = "string";
       [link]label = "string";
       [link]list = "string";
       [link]mnemonic = "char";
       [link]multiple_select = flag;
       [link]tabs = "string";
       [link]value = "string";
       [link]width = number;
   }

EXAMPLE
   : list_box {
       action = "(subdir)";
       label = "Select a color:";
       list = "Red\nGreen\nBlue";
       value = "0";
   }

NOTE
     * Use the \n (new-line) character within the [link]list attribute to separate lines.
     * The [link]label attribute displays the text above the list box.
     * The [link]value attribute determines which items on the list are initially selected or highlighted. The attribute consists of a string of integers separated by spaces, as in the following:

       value = "0 2 5";

     * The first item is #0. A null string "" means no items are highlighted. When the [link]multiple_select attribute is false, the value attribute must contain a single integer.

Related DCL Tiles
   [link]button
   [link]edit_box
   [link]image_button
   [link]popup_list
   [link]radio_button
   [link]slider
   [link]toggle

More about...
   [link]multi_edit_box
